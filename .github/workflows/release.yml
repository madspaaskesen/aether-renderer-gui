name: Release Binaries

on:
  release:
    types: [published]

permissions:
  contents: write  # Required for uploading release assets

jobs:
  build:
    name: Build binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            ext: ""
            name: linux-x86_64

          - os: macos-latest
            target: x86_64-apple-darwin
            ext: ""
            name: macos-x86_64

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: ".exe"
            name: windows-x86_64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      
      - name: Install JSCoreGTK 4.0
        if: runner.os == 'Linux'
        run: sudo apt-get install -y libjavascriptcoregtk-4.1-dev

      - name: Install system dependencies for Tauri
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libayatana-appindicator3-dev \
            libsoup-3.0-dev \
            build-essential \
            curl \
            pkg-config \
            libssl-dev \
            webkit2gtk-4.1-dev

      - uses: actions/cache@v3
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-tauri

      - name: Install Tauri CLI
        run: cargo install tauri-cli

      - name: Build release binary
        run: cargo tauri build --release --target ${{ matrix.target }}

      - name: Prepare release artifact
        shell: bash
        run: |
          mkdir -p dist/${{ matrix.name }}
          cp target/${{ matrix.target }}/release/aether-renderer-gui${{ matrix.ext }} \
            dist/${{ matrix.name }}/aether-renderer-gui${{ matrix.ext }}

          # macOS special: move whole .app bundle if exists
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            cp -R src-tauri/target/release/bundle/macos/aether-renderer-gui.app dist/${{ matrix.name }}/
          fi

          cd dist
          zip -r aether-renderer-gui-${{ github.ref_name }}-${{ matrix.name }}.zip ${{ matrix.name }}

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy installer (if exists)
        shell: bash
        run: |
          mkdir -p dist
          # Check for .msi
          if compgen -G "src-tauri/target/${{ matrix.target }}/bundle/msi/*.msi" > /dev/null; then
            cp src-tauri/target/${{ matrix.target }}/bundle/msi/*.msi dist/
          fi
          # Check for .dmg
          if compgen -G "src-tauri/target/${{ matrix.target }}/bundle/dmg/*.dmg" > /dev/null; then
            cp src-tauri/target/${{ matrix.target }}/bundle/dmg/*.dmg dist/
          fi
          # Check for .AppImage or .deb
          if compgen -G "src-tauri/target/${{ matrix.target }}/bundle/appimage/*.AppImage" > /dev/null; then
            cp src-tauri/target/${{ matrix.target }}/bundle/appimage/*.AppImage dist/
          fi
          if compgen -G "src-tauri/target/${{ matrix.target }}/bundle/deb/*.deb" > /dev/null; then
            cp src-tauri/target/${{ matrix.target }}/bundle/deb/*.deb dist/
          fi

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
